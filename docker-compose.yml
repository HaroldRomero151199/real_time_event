version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: real_time_event_db
    environment:
      POSTGRES_DB: events_db
      POSTGRES_USER: events_user
      POSTGRES_PASSWORD: events_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - events_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U events_user -d events_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # NestJS Application
  app:
    build: .
    container_name: real_time_event_app
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://events_user:events_password@postgres:5432/events_db
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: events_user
      DB_PASSWORD: events_password
      DB_NAME: events_db
      PORT: 3000
      SWAGGER_ENABLED: true
      SWAGGER_TITLE: "Real-Time Event Manager API - Docker"
      SWAGGER_DESCRIPTION: "Docker environment for the Real-Time Event Manager API"
      SWAGGER_VERSION: "1.0"
      SWAGGER_PATH: "api"
      LOG_LEVEL: debug
      JWT_SECRET: dev-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - events_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  events_network:
    driver: bridge 